{
    "openapi": "3.0.0",
    "info": {
      "title": "v1 Farcaster",
      "version": "1.0"
    },
    "servers": [
      {
        "url": "https://api.neynar.com/v1"
      }
    ],
    "security": [
      {
        "ApiKeyAuth": []
      }
    ],
    "components": {
      "securitySchemes": {
        "ApiKeyAuth": {
          "type": "apiKey",
          "in": "header",
          "name": "api_key",
          "description": "API key required for authentication. use value --> NEYNAR_API_DOCS<-- for testing"
        }
      },
      "schemas": {
        "ViewerContext": {
          "type": "object",
          "properties": {
            "following": {
              "type": "boolean"
            },
            "followedBy": {
              "type": "boolean"
            }
          }
        },
        "Fid": {
          "type": "integer",
          "format": "int32",
          "default": 3,
          "description": "User identifier (unsigned integer)"
        },
        "ActiveStatus": {
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ],
          "description": "The status of a user.\n  - active: The user is currently active.\n  - inactive: The user is not currently active.\n"
        },
        "Address": {
          "type": "string",
          "description": "Ethereum address"
        },
        "ErrorRes": {
          "type": "object",
          "description": "Returns ErrorRes metadata",
          "properties": {
            "code": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "property": {
              "type": "string"
            }
          }
        },
        "User": {
          "type": "object",
          "properties": {
            "fid": {
              "$ref": "#/components/schemas/Fid"
            },
            "username": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "pfp": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                }
              }
            },
            "profile": {
              "type": "object",
              "properties": {
                "bio": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "string"
                    },
                    "mentions": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "followerCount": {
              "type": "integer",
              "format": "int32"
            },
            "followingCount": {
              "type": "integer",
              "format": "int32"
            },
            "verifications": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "activeStatus": {
              "$ref": "#/components/schemas/ActiveStatus"
            },
            "viewerContext": {
              "$ref": "#/components/schemas/ViewerContext"
            }
          }
        },
        "Reaction": {
          "type": "object",
          "description": "Reaction of a user (either like or recast), along with its associated cast",
          "properties": {
            "reaction": {
              "type": "object",
              "properties": {
                "reactor_fid": {
                  "$ref": "#/components/schemas/Fid"
                },
                "reaction_type": {
                  "type": "string",
                  "enum": [
                    "like",
                    "recast"
                  ]
                },
                "reaction_hash": {
                  "type": "string"
                },
                "reaction_target_hash": {
                  "type": "string"
                },
                "reaction_timestamp": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "cast": {
              "type": "object",
              "properties": {
                "cast_fid": {
                  "$ref": "#/components/schemas/Fid"
                },
                "cast_hash": {
                  "type": "string"
                },
                "cast_text": {
                  "type": "string"
                },
                "cast_embeds": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string"
                      }
                    }
                  }
                },
                "cast_timestamp": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "cast_author": {
              "$ref": "#/components/schemas/User"
            }
          }
        },
        "NextCursor": {
          "type": "object",
          "description": "Returns next cursor",
          "properties": {
            "cursor": {
              "type": "string",
              "nullable": true
            }
          }
        },
        "UserCastLikeResponse": {
          "type": "object",
          "properties": {
            "result": {
              "type": "object",
              "properties": {
                "reactor": {
                  "$ref": "#/components/schemas/User"
                },
                "likes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reaction"
                  }
                },
                "next": {
                  "$ref": "#/components/schemas/NextCursor"
                }
              }
            }
          }
        },
        "RecentUsersResponse": {
          "type": "object",
          "properties": {
            "result": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                },
                "next": {
                  "$ref": "#/components/schemas/NextCursor"
                }
              }
            }
          }
        }
      },
      "responses": {
        "UserSuccess": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "result": {
                    "type": "object",
                    "properties": {
                      "user": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "404Response": {
          "description": "404",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorRes"
              }
            }
          }
        }
      }
    },
    "tags": [
      {
        "name": "User",
        "description": "Operations related to user",
        "externalDocs": {
          "description": "More info about user",
          "url": "https://docs.neynar.com/reference/get-user-information-by-fid"
        }
      }
    ],
    "paths": {
      "/farcaster/user": {
        "get": {
          "tags": [
            "User"
          ],
          "summary": "Get User Information by FID",
          "description": "Returns metadata about a specific user",
          "operationId": "get-user-information-by-fid",
          "parameters": [
            {
              "name": "fid",
              "in": "query",
              "required": true,
              "description": "fid of a user",
              "schema": {
                "$ref": "#/components/schemas/Fid"
              }
            },
            {
              "name": "viewerFid",
              "in": "query",
              "description": "fid of the user viewing this information, needed for contextual information.",
              "schema": {
                "$ref": "#/components/schemas/Fid"
              }
            }
          ],
          "responses": {
            "200": {
              "$ref": "#/components/responses/UserSuccess"
            },
            "404": {
              "$ref": "#/components/responses/404Response"
            }
          },
          "deprecated": false
        }
      },
      "/farcaster/user-by-username": {
        "get": {
          "tags": [
            "User"
          ],
          "summary": "Get User Information by username",
          "description": "Returns metadata about a specific user",
          "operationId": "get-user-information-by-username",
          "parameters": [
            {
              "name": "username",
              "in": "query",
              "required": true,
              "description": "Username of the user",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "viewerFid",
              "in": "query",
              "description": "fid of the user viewing this information, needed for contextual information.",
              "schema": {
                "$ref": "#/components/schemas/Fid"
              }
            }
          ],
          "responses": {
            "200": {
              "$ref": "#/components/responses/UserSuccess"
            },
            "404": {
              "$ref": "#/components/responses/404Response"
            }
          },
          "deprecated": false
        }
      },
      "/farcaster/user-cast-likes": {
        "get": {
          "tags": [
            "User"
          ],
          "summary": "Get User Cast Likes",
          "description": "Fetch all the liked cast of a User",
          "operationId": "get-user-cast-likes",
          "parameters": [
            {
              "name": "fid",
              "in": "query",
              "required": true,
              "description": "FID of the user",
              "schema": {
                "$ref": "#/components/schemas/Fid"
              }
            },
            {
              "name": "viewerFid",
              "in": "query",
              "description": "fid of the user viewing this information, needed for contextual information.",
              "schema": {
                "$ref": "#/components/schemas/Fid"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to retrieve (default 25, max 150)",
              "schema": {
                "type": "integer",
                "default": 25,
                "maximum": 150
              }
            },
            {
              "name": "cursor",
              "in": "query",
              "description": "Pagination cursor",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserCastLikeResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRes"
                  }
                }
              }
            }
          }
        }
      },
      "/farcaster/recent-users": {
        "get": {
          "tags": [
            "User"
          ],
          "summary": "Get Recent Users",
          "description": "Fetch all Recent Users",
          "operationId": "recent-users",
          "parameters": [
            {
              "name": "viewerFid",
              "in": "query",
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "description": "Viewer's User identifier."
            },
            {
              "name": "cursor",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Pagination cursor."
            },
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 100,
                "maximum": 1000
              },
              "description": "Limit for number of users returned (between 100 and 1000)."
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RecentUsersResponse"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
