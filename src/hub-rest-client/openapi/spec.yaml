openapi: 3.0.1
info:
  title: Farcaster Hub REST API
  version: "1"
servers:
- url: http://hub.farcaster.standardcrypto.vc:2281/
paths:
  /HubService/GetAllCastMessagesByFid:
    post:
      tags:
      - Casts
      summary: Bulk Methods
      operationId: HubService_GetAllCastMessagesByFid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FidRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetAllLinkMessagesByFid:
    post:
      tags:
      - HubService
      operationId: HubService_GetAllLinkMessagesByFid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FidRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetAllMessagesBySyncIds:
    post:
      tags:
      - HubService
      operationId: HubService_GetAllMessagesBySyncIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncIds'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetAllReactionMessagesByFid:
    post:
      tags:
      - HubService
      operationId: HubService_GetAllReactionMessagesByFid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FidRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetAllSyncIdsByPrefix:
    post:
      tags:
      - HubService
      operationId: HubService_GetAllSyncIdsByPrefix
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrieNodePrefix'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncIds'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetAllUserDataMessagesByFid:
    post:
      tags:
      - HubService
      operationId: HubService_GetAllUserDataMessagesByFid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FidRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetAllVerificationMessagesByFid:
    post:
      tags:
      - HubService
      operationId: HubService_GetAllVerificationMessagesByFid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FidRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /v1/castById:
    get:
      tags:
      - Casts
      summary: Get a cast by its FID and Hash.
      operationId: GetCastById
      parameters:
      - name: fid
        in: query
        description: The FID of the cast's creator
        required: true
        schema:
          type: integer
      - name: hash
        in: query
        description: The cast's hash
        required: true
        schema:
          pattern: ^0x[0-9a-fA-F]{40}$
          type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/castsByFid:
    get:
      tags:
      - Casts
      summary: Fetch all casts authored by an FID.
      operationId: GetCastsByFid
      parameters:
      - name: fid
        in: query
        description: The FID of the casts' creator
        required: true
        schema:
          type: integer
      - name: pageSize
        in: query
        description: Maximum number of messages to return in a single response
        schema:
          type: integer
      - name: reverse
        in: query
        description: Reverse the sort order, returning latest messages first
        schema:
          type: boolean
      - name: pageToken
        in: query
        description: The page token returned by the previous query, to fetch the next
          page. If this parameter is empty, fetch the first page
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/castsByMention:
    get:
      tags:
      - Casts
      summary: Fetch all casts that mention an FID
      operationId: GetCastsByMention
      parameters:
      - name: fid
        in: query
        description: The FID that is mentioned in a cast
        required: true
        schema:
          type: integer
      - name: pageSize
        in: query
        description: Maximum number of messages to return in a single response
        schema:
          type: integer
      - name: reverse
        in: query
        description: Reverse the sort order, returning latest messages first
        schema:
          type: boolean
      - name: pageToken
        in: query
        description: The page token returned by the previous query, to fetch the next
          page. If this parameter is empty, fetch the first page
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/castsByParent:
    get:
      tags:
        - Casts
      summary: Fetch all casts by parent cast's FID and Hash OR by the parent's URL
      operationId: GetCastsByParent
      parameters:
        - name: fid
          in: query
          description: The FID of the parent cast
          schema:
            type: integer
        - name: hash
          in: query
          description: The parent cast's hash
          schema:
            type: string
        - name: url
          in: query
          schema:
            type: string
        - name: pageSize
          in: query
          description: Maximum number of messages to return in a single response
          schema:
            type: integer
        - name: reverse
          in: query
          description: Reverse the sort order, returning latest messages first
          schema:
            type: boolean
        - name: pageToken
          in: query
          description: The page token returned by the previous query, to fetch the next
            page. If this parameter is empty, fetch the first page
          schema:
            type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /HubService/GetCurrentStorageLimitsByFid:
    post:
      tags:
      - HubService
      operationId: HubService_GetCurrentStorageLimitsByFid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FidRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageLimitsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetEvent:
    post:
      tags:
      - HubService
      operationId: HubService_GetEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubEvent'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetFids:
    post:
      tags:
      - HubService
      operationId: HubService_GetFids
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FidsRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FidsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetIdRegistryOnChainEvent:
    post:
      tags:
      - HubService
      operationId: HubService_GetIdRegistryOnChainEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FidRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnChainEvent'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetIdRegistryOnChainEventByAddress:
    post:
      tags:
      - HubService
      operationId: HubService_GetIdRegistryOnChainEventByAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdRegistryEventByAddressRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnChainEvent'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /v1/info:
    get:
      tags:
      - Info
      summary: Sync Methods
      operationId: GetInfo
      parameters:
      - name: dbstats
        in: query
        description: Whether to return DB stats
        required: true
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubInfoResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /HubService/GetLink:
    post:
      tags:
      - HubService
      summary: Links
      operationId: HubService_GetLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetLinksByFid:
    post:
      tags:
      - HubService
      operationId: HubService_GetLinksByFid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinksByFidRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetLinksByTarget:
    post:
      tags:
      - HubService
      operationId: HubService_GetLinksByTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinksByTargetRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetOnChainEvents:
    post:
      tags:
      - HubService
      operationId: HubService_GetOnChainEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnChainEventRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnChainEventResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetOnChainSigner:
    post:
      tags:
      - HubService
      summary: OnChain Events
      operationId: HubService_GetOnChainSigner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignerRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnChainEvent'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetOnChainSignersByFid:
    post:
      tags:
      - HubService
      operationId: HubService_GetOnChainSignersByFid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FidRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnChainEventResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /v1/reactionById:
    get:
      tags:
        - Reactions
      summary: Get a reaction by its created FID and target Cast.
      operationId: GetReactionById
      parameters:
        - name: fid
          in: query
          description: The FID of the reaction's creator
          schema:
            type: integer
          required: true
        - name: target_fid
          in: query
          description: The FID of the cast's creator
          schema:
            type: integer
          required: true
        - name: target_hash
          in: query
          description: The cast's hash
          schema:
            type: string
          required: true
        - name: reaction_type
          in: query
          description: The type of reaction, either as a numerical enum value or string representation
          schema:
            $ref: '#/components/schemas/ReactionType'
          required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /HubService/GetReactionsByCast:
    post:
      tags:
      - HubService
      summary: To be deprecated
      operationId: HubService_GetReactionsByCast
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReactionsByTargetRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetReactionsByFid:
    post:
      tags:
      - HubService
      operationId: HubService_GetReactionsByFid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReactionsByFidRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetReactionsByTarget:
    post:
      tags:
      - HubService
      operationId: HubService_GetReactionsByTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReactionsByTargetRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetSyncMetadataByPrefix:
    post:
      tags:
      - HubService
      operationId: HubService_GetSyncMetadataByPrefix
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrieNodePrefix'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrieNodeMetadataResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetSyncSnapshotByPrefix:
    post:
      tags:
      - HubService
      operationId: HubService_GetSyncSnapshotByPrefix
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrieNodePrefix'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrieNodeSnapshotResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetSyncStatus:
    post:
      tags:
      - HubService
      operationId: HubService_GetSyncStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncStatusRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncStatusResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetUserData:
    post:
      tags:
      - HubService
      summary: User Data
      operationId: HubService_GetUserData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDataRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetUserDataByFid:
    post:
      tags:
      - HubService
      operationId: HubService_GetUserDataByFid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FidRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetUserNameProofsByFid:
    post:
      tags:
      - HubService
      operationId: HubService_GetUserNameProofsByFid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FidRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameProofsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetUsernameProof:
    post:
      tags:
      - HubService
      summary: Username Proof
      operationId: HubService_GetUsernameProof
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameProofRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNameProof'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetVerification:
    post:
      tags:
      - HubService
      summary: Verifications
      operationId: HubService_GetVerification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/GetVerificationsByFid:
    post:
      tags:
      - HubService
      operationId: HubService_GetVerificationsByFid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FidRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/SubmitMessage:
    post:
      tags:
      - HubService
      summary: Submit Methods
      operationId: HubService_SubmitMessage
      requestBody:
        description: "* \nA Message is a delta operation on the Farcaster network.\
          \ The message protobuf is an envelope \nthat wraps a MessageData object\
          \ and contains a hash and signature which can verify its authenticity."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /HubService/Subscribe:
    post:
      tags:
      - HubService
      summary: Event Methods
      operationId: HubService_Subscribe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeRequest'
        required: true
      responses:
        200:
          description: A successful response.(streaming responses)
          content:
            application/json:
              schema:
                title: Stream result of HubEvent
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/HubEvent'
                  error:
                    $ref: '#/components/schemas/ErrorResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
components:
  schemas:
    CastAddBody:
      title: '* Adds a new Cast'
      type: object
      properties:
        embedsDeprecated:
          title: URLs to be embedded in the cast
          type: array
          items:
            type: string
        mentions:
          title: Fids mentioned in the cast
          type: array
          items:
            type: integer
            format: uint64
        parentCastId:
          $ref: '#/components/schemas/CastId'
        parentUrl:
          title: Parent URL
          type: string
        text:
          title: Text of the cast
          type: string
        mentionsPositions:
          title: Positions of the mentions in the text
          type: array
          items:
            type: integer
            format: int64
        embeds:
          title: URLs or cast ids to be embedded in the cast
          type: array
          items:
            $ref: '#/components/schemas/Embed'
    CastId:
      title: '* Identifier used to look up a Cast'
      required:
      - fid
      - hash
      type: object
      properties:
        fid:
          title: Fid of the user who created the cast
          type: integer
          format: uint64
        hash:
          $ref: "#/components/schemas/CastHash"
          # title: Hash of the cast
          # pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          # type: string
          # format: byte
    CastHash:
      pattern: ^0x[0-9a-fA-F]{40}$
      type: string
    CastRemoveBody:
      title: '* Removes an existing Cast'
      type: object
      properties:
        targetHash:
          title: Hash of the cast to remove
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
    DbStats:
      required:
      - numFidEvents
      - numFnameEvents
      - numMessages
      type: object
      properties:
        numMessages:
          type: integer
          format: uint64
        numFidEvents:
          type: integer
          format: uint64
        numFnameEvents:
          type: integer
          format: uint64
    Embed:
      type: object
      properties:
        url:
          type: string
        castId:
          $ref: '#/components/schemas/CastId'
    Empty:
      type: object
    ErrorResponse:
      required:
      - code
      - details
      - errCode
      - metadata
      - name
      - presentable
      type: object
      properties:
        errCode:
          type: string
        presentable:
          type: boolean
        name:
          type: string
        code:
          type: integer
        details:
          type: string
        metadata:
          required:
          - errcode
          type: object
          properties:
            errcode:
              type: array
              items:
                type: string
    EventRequest:
      type: object
      properties:
        id:
          type: string
          format: uint64
    FarcasterNetwork:
      title: '* Farcaster network the message is intended for'
      type: string
      description: |-
        - FARCASTER_NETWORK_MAINNET: Public primary network
         - FARCASTER_NETWORK_TESTNET: Public test network
         - FARCASTER_NETWORK_DEVNET: Private test network
      default: FARCASTER_NETWORK_NONE
      enum:
      - FARCASTER_NETWORK_NONE
      - FARCASTER_NETWORK_MAINNET
      - FARCASTER_NETWORK_TESTNET
      - FARCASTER_NETWORK_DEVNET
    FidRequest:
      type: object
      properties:
        fid:
          type: string
          format: uint64
        pageSize:
          type: integer
          format: int64
        pageToken:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        reverse:
          type: boolean
    FidsRequest:
      type: object
      properties:
        pageSize:
          type: integer
          format: int64
        pageToken:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        reverse:
          type: boolean
    FidsResponse:
      type: object
      properties:
        fids:
          type: array
          items:
            type: string
            format: uint64
        nextPageToken:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
    HashScheme:
      title: '* Type of hashing scheme used to produce a digest of MessageData'
      type: string
      description: '- HASH_SCHEME_BLAKE3: Default scheme for hashing MessageData'
      default: HASH_SCHEME_NONE
      enum:
      - HASH_SCHEME_NONE
      - HASH_SCHEME_BLAKE3
    HubEvent:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/HubEventType'
        id:
          type: integer
          format: uint64
        mergeMessageBody:
          $ref: '#/components/schemas/MergeMessageBody'
        pruneMessageBody:
          $ref: '#/components/schemas/PruneMessageBody'
        revokeMessageBody:
          $ref: '#/components/schemas/RevokeMessageBody'
        mergeUsernameProofBody:
          $ref: '#/components/schemas/MergeUserNameProofBody'
        mergeOnChainEventBody:
          $ref: '#/components/schemas/MergeOnChainEventBody'
    HubEventType:
      title: |-
        - HUB_EVENT_TYPE_MERGE_USERNAME_PROOF: Deprecated
         HUB_EVENT_TYPE_MERGE_ID_REGISTRY_EVENT = 4;
         HUB_EVENT_TYPE_MERGE_NAME_REGISTRY_EVENT = 5;
         - HUB_EVENT_TYPE_MERGE_ON_CHAIN_EVENT: Deprecated
         HUB_EVENT_TYPE_MERGE_RENT_REGISTRY_EVENT = 7;
         HUB_EVENT_TYPE_MERGE_STORAGE_ADMIN_REGISTRY_EVENT = 8;
      type: string
      default: HUB_EVENT_TYPE_NONE
      enum:
      - HUB_EVENT_TYPE_NONE
      - HUB_EVENT_TYPE_MERGE_MESSAGE
      - HUB_EVENT_TYPE_PRUNE_MESSAGE
      - HUB_EVENT_TYPE_REVOKE_MESSAGE
      - HUB_EVENT_TYPE_MERGE_USERNAME_PROOF
      - HUB_EVENT_TYPE_MERGE_ON_CHAIN_EVENT
    HubInfoRequest:
      type: object
      properties:
        dbStats:
          type: boolean
    HubInfoResponse:
      title: Response Types for the Sync RPC Methods
      required:
      - hubOperatorFid
      - isSyncing
      - nickname
      - peerId
      - rootHash
      - version
      type: object
      properties:
        version:
          type: string
        isSyncing:
          type: boolean
        nickname:
          type: string
        rootHash:
          type: string
        dbStats:
          $ref: '#/components/schemas/DbStats'
        peerId:
          type: string
        hubOperatorFid:
          type: integer
          format: uint64
    IdRegisterEventBody:
      type: object
      properties:
        to:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        eventType:
          $ref: '#/components/schemas/IdRegisterEventType'
        from:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        recoveryAddress:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
    IdRegisterEventType:
      type: string
      default: ID_REGISTER_EVENT_TYPE_NONE
      enum:
      - ID_REGISTER_EVENT_TYPE_NONE
      - ID_REGISTER_EVENT_TYPE_REGISTER
      - ID_REGISTER_EVENT_TYPE_TRANSFER
      - ID_REGISTER_EVENT_TYPE_CHANGE_RECOVERY
    IdRegistryEventByAddressRequest:
      type: object
      properties:
        address:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
    LinkBody:
      title: '* Adds or removes a Link'
      type: object
      properties:
        type:
          title: Type of link, <= 8 characters
          type: string
        displayTimestamp:
          title: User-defined timestamp that preserves original timestamp when message.data.timestamp
            needs to be updated for compaction
          type: integer
          format: int64
        targetFid:
          title: The fid the link relates to
          type: integer
          format: uint64
    LinkRequest:
      type: object
      properties:
        fid:
          type: integer
          format: uint64
        linkType:
          type: string
        targetFid:
          type: integer
          format: uint64
    LinksByFidRequest:
      type: object
      properties:
        fid:
          type: string
          format: uint64
        linkType:
          type: string
        pageSize:
          type: integer
          format: int64
        pageToken:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        reverse:
          type: boolean
    LinksByTargetRequest:
      type: object
      properties:
        targetFid:
          type: string
          format: uint64
        linkType:
          type: string
        pageSize:
          type: integer
          format: int64
        pageToken:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        reverse:
          type: boolean
    MergeMessageBody:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/Message'
        deletedMessages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
    MergeOnChainEventBody:
      type: object
      properties:
        onChainEvent:
          $ref: '#/components/schemas/OnChainEvent'
    MergeUserNameProofBody:
      type: object
      properties:
        usernameProof:
          $ref: '#/components/schemas/UserNameProof'
        deletedUsernameProof:
          $ref: '#/components/schemas/UserNameProof'
        usernameProofMessage:
          $ref: '#/components/schemas/Message'
        deletedUsernameProofMessage:
          $ref: '#/components/schemas/Message'
    Message:
      required:
      - data
      - hash
      - hashScheme
      - signature
      - signatureScheme
      - signer
      type: object
      properties:
        data:
          # $ref: '#/components/schemas/MessageDataReactionAdd'
          oneOf:
            - $ref: '#/components/schemas/MessageDataCastAdd'
            - $ref: '#/components/schemas/MessageDataCastRemove'
            - $ref: '#/components/schemas/MessageDataReactionAdd'
          discriminator:
              propertyName: type
              mapping:
                MESSAGE_TYPE_CAST_ADD: '#/components/schemas/MessageDataCastAdd'
                MESSAGE_TYPE_CAST_REMOVE: '#/components/schemas/MessageDataCastRemove'
                MESSAGE_TYPE_REACTION_ADD: '#/components/schemas/MessageDataReactionAdd'
        hash:
          title: Hash digest of data
          pattern: ^0x[0-9a-fA-F]{40}$
          type: string
          format: byte
        hashScheme:
          $ref: '#/components/schemas/HashScheme'
        signature:
          title: Signature of the hash digest
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        signatureScheme:
          $ref: '#/components/schemas/SignatureScheme'
        signer:
          title: Public key or address of the key pair that produced the signature
          pattern: ^0x[0-9a-fA-F]+$
          type: string
          format: byte
      description: "* \nA Message is a delta operation on the Farcaster network. The\
        \ message protobuf is an envelope \nthat wraps a MessageData object and contains\
        \ a hash and signature which can verify its authenticity."
    MessageDataCommon:
      required:
      - fid
      - network
      - timestamp
      - type
      type: object
      properties:
        fid:
          title: Farcaster ID of the user producing the message
          type: integer
          format: uint64
        timestamp:
          title: Farcaster epoch timestamp in seconds
          type: integer
          format: int64
        network:
          $ref: '#/components/schemas/FarcasterNetwork'
    MessageDataCastAdd:
      allOf:
        - $ref: '#/components/schemas/MessageDataCommon'
        - type: object
          required:
            - castAddBody
          properties:
            castAddBody:
              $ref: '#/components/schemas/CastAddBody'
    MessageDataCastRemove:
      allOf:
        - $ref: '#/components/schemas/MessageDataCommon'
        - type: object
          required:
            - castRemoveBody
          properties:
            castRemoveBody:
              $ref: '#/components/schemas/CastRemoveBody'
    MessageDataReactionAdd:
      allOf:
        - $ref: '#/components/schemas/MessageDataCommon'
        - type: object
          required:
            - reactionBody
          properties:
            reactionBody:
              $ref: '#/components/schemas/ReactionBody'
    MessageDataOld:
      required:
      - fid
      - network
      - timestamp
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/MessageType'
        fid:
          title: Farcaster ID of the user producing the message
          type: integer
          format: uint64
        timestamp:
          title: Farcaster epoch timestamp in seconds
          type: integer
          format: int64
        network:
          $ref: '#/components/schemas/FarcasterNetwork'
        castAddBody:
          $ref: '#/components/schemas/CastAddBody'
        castRemoveBody:
          $ref: '#/components/schemas/CastRemoveBody'
        reactionBody:
          $ref: '#/components/schemas/ReactionBody'
        verificationAddEthAddressBody:
          $ref: '#/components/schemas/VerificationAddEthAddressBody'
        verificationRemoveBody:
          $ref: '#/components/schemas/VerificationRemoveBody'
        userDataBody:
          $ref: '#/components/schemas/UserDataBody'
        linkBody:
          $ref: '#/components/schemas/LinkBody'
        usernameProofBody:
          $ref: '#/components/schemas/UserNameProof'
      description: "* \nA MessageData object contains properties common to all messages\
        \ and wraps a body object which \ncontains properties specific to the MessageType."
    MessageType:
      title: '* Type of the MessageBody'
      type: string
      description: |-
        - MESSAGE_TYPE_CAST_ADD: Add a new Cast
         - MESSAGE_TYPE_CAST_REMOVE: Remove an existing Cast
         - MESSAGE_TYPE_REACTION_ADD: Add a Reaction to a Cast
         - MESSAGE_TYPE_REACTION_REMOVE: Remove a Reaction from a Cast
         - MESSAGE_TYPE_LINK_ADD: Add a new Link
         - MESSAGE_TYPE_LINK_REMOVE: Remove an existing Link
         - MESSAGE_TYPE_VERIFICATION_ADD_ETH_ADDRESS: Add a Verification of an Ethereum Address
         - MESSAGE_TYPE_VERIFICATION_REMOVE: Remove a Verification
         - MESSAGE_TYPE_USER_DATA_ADD: Deprecated
         MESSAGE_TYPE_SIGNER_ADD = 9; // Add a new Ed25519 key pair that signs messages for a user
         MESSAGE_TYPE_SIGNER_REMOVE = 10; // Remove an Ed25519 key pair that signs messages for a user

        Add metadata about a user
         - MESSAGE_TYPE_USERNAME_PROOF: Add or replace a username proof
      default: MESSAGE_TYPE_NONE
      enum:
      - MESSAGE_TYPE_NONE
      - MESSAGE_TYPE_CAST_ADD
      - MESSAGE_TYPE_CAST_REMOVE
      - MESSAGE_TYPE_REACTION_ADD
      - MESSAGE_TYPE_REACTION_REMOVE
      - MESSAGE_TYPE_LINK_ADD
      - MESSAGE_TYPE_LINK_REMOVE
      - MESSAGE_TYPE_VERIFICATION_ADD_ETH_ADDRESS
      - MESSAGE_TYPE_VERIFICATION_REMOVE
      - MESSAGE_TYPE_USER_DATA_ADD
      - MESSAGE_TYPE_USERNAME_PROOF
    MessagesResponse:
      required:
      - messages
      - nextPageToken
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        nextPageToken:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
    OnChainEvent:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/OnChainEventType'
        chainId:
          type: integer
          format: int64
        blockNumber:
          type: integer
          format: int64
        blockHash:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        blockTimestamp:
          type: integer
          format: uint64
        transactionHash:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        logIndex:
          type: integer
          format: int64
        fid:
          type: integer
          format: uint64
        signerEventBody:
          $ref: '#/components/schemas/SignerEventBody'
        signerMigratedEventBody:
          $ref: '#/components/schemas/SignerMigratedEventBody'
        idRegisterEventBody:
          $ref: '#/components/schemas/IdRegisterEventBody'
        storageRentEventBody:
          $ref: '#/components/schemas/StorageRentEventBody'
        txIndex:
          type: integer
          format: int64
    OnChainEventRequest:
      type: object
      properties:
        fid:
          type: string
          format: uint64
        eventType:
          $ref: '#/components/schemas/OnChainEventType'
        pageSize:
          type: integer
          format: int64
        pageToken:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        reverse:
          type: boolean
    OnChainEventResponse:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/OnChainEvent'
        nextPageToken:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
    OnChainEventType:
      type: string
      default: EVENT_TYPE_NONE
      enum:
      - EVENT_TYPE_NONE
      - EVENT_TYPE_SIGNER
      - EVENT_TYPE_SIGNER_MIGRATED
      - EVENT_TYPE_ID_REGISTER
      - EVENT_TYPE_STORAGE_RENT
    PruneMessageBody:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/Message'
    ReactionBody:
      title: '* Adds or removes a Reaction from a Cast'
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ReactionType'
        targetCastId:
          $ref: '#/components/schemas/CastId'
        targetUrl:
          title: URL to react to
          type: string
    ReactionRequest:
      type: object
      properties:
        fid:
          type: string
          format: uint64
        reactionType:
          $ref: '#/components/schemas/ReactionType'
        targetCastId:
          $ref: '#/components/schemas/CastId'
        targetUrl:
          type: string
    ReactionType:
      title: '* Type of Reaction'
      type: string
      description: |-
        - REACTION_TYPE_LIKE: Like the target cast
         - REACTION_TYPE_RECAST: Share target cast to the user's audience
      default: REACTION_TYPE_NONE
      enum:
      - REACTION_TYPE_NONE
      - REACTION_TYPE_LIKE
      - REACTION_TYPE_RECAST
    ReactionsByFidRequest:
      type: object
      properties:
        fid:
          type: string
          format: uint64
        reactionType:
          $ref: '#/components/schemas/ReactionType'
        pageSize:
          type: integer
          format: int64
        pageToken:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        reverse:
          type: boolean
    ReactionsByTargetRequest:
      type: object
      properties:
        targetCastId:
          $ref: '#/components/schemas/CastId'
        targetUrl:
          type: string
        reactionType:
          $ref: '#/components/schemas/ReactionType'
        pageSize:
          type: integer
          format: int64
        pageToken:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        reverse:
          type: boolean
    RevokeMessageBody:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/Message'
    SignatureScheme:
      title: '* Type of signature scheme used to sign the Message hash'
      type: string
      description: |-
        - SIGNATURE_SCHEME_ED25519: Ed25519 signature (default)
         - SIGNATURE_SCHEME_EIP712: ECDSA signature using EIP-712 scheme
      default: SIGNATURE_SCHEME_NONE
      enum:
      - SIGNATURE_SCHEME_NONE
      - SIGNATURE_SCHEME_ED25519
      - SIGNATURE_SCHEME_EIP712
    SignerEventBody:
      type: object
      properties:
        key:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        keyType:
          type: integer
          format: int64
        eventType:
          $ref: '#/components/schemas/SignerEventType'
        metadata:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        metadataType:
          type: integer
          format: int64
    SignerEventType:
      type: string
      default: SIGNER_EVENT_TYPE_NONE
      enum:
      - SIGNER_EVENT_TYPE_NONE
      - SIGNER_EVENT_TYPE_ADD
      - SIGNER_EVENT_TYPE_REMOVE
      - SIGNER_EVENT_TYPE_ADMIN_RESET
    SignerMigratedEventBody:
      type: object
      properties:
        migratedAt:
          type: integer
          format: int64
    SignerRequest:
      type: object
      properties:
        fid:
          type: integer
          format: uint64
        signer:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
    StorageLimit:
      type: object
      properties:
        storeType:
          $ref: '#/components/schemas/StoreType'
        limit:
          type: integer
          format: uint64
    StorageLimitsResponse:
      type: object
      properties:
        limits:
          type: array
          items:
            $ref: '#/components/schemas/StorageLimit'
    StorageRentEventBody:
      type: object
      properties:
        payer:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        units:
          type: integer
          format: int64
        expiry:
          type: integer
          format: int64
    StoreType:
      type: string
      default: STORE_TYPE_NONE
      enum:
      - STORE_TYPE_NONE
      - STORE_TYPE_CASTS
      - STORE_TYPE_LINKS
      - STORE_TYPE_REACTIONS
      - STORE_TYPE_USER_DATA
      - STORE_TYPE_VERIFICATIONS
      - STORE_TYPE_USERNAME_PROOFS
    SubscribeRequest:
      type: object
      properties:
        eventTypes:
          type: array
          items:
            $ref: '#/components/schemas/HubEventType'
        fromId:
          type: integer
          format: uint64
    SyncIds:
      type: object
      properties:
        syncIds:
          type: array
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
    SyncStatus:
      type: object
      properties:
        peerId:
          type: string
        inSync:
          type: string
        shouldSync:
          type: boolean
        divergencePrefix:
          type: string
        divergenceSecondsAgo:
          type: integer
          format: int32
        theirMessages:
          type: integer
          format: uint64
        ourMessages:
          type: integer
          format: uint64
        lastBadSync:
          type: integer
          format: int64
    SyncStatusRequest:
      type: object
      properties:
        peerId:
          type: string
    SyncStatusResponse:
      type: object
      properties:
        isSyncing:
          type: boolean
        syncStatus:
          type: array
          items:
            $ref: '#/components/schemas/SyncStatus'
        engineStarted:
          type: boolean
    TrieNodeMetadataResponse:
      type: object
      properties:
        prefix:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        numMessages:
          type: string
          format: uint64
        hash:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/TrieNodeMetadataResponse'
    TrieNodePrefix:
      type: object
      properties:
        prefix:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
    TrieNodeSnapshotResponse:
      type: object
      properties:
        prefix:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        excludedHashes:
          type: array
          items:
            type: string
        numMessages:
          type: string
          format: uint64
        rootHash:
          type: string
    UserDataBody:
      title: '* Adds metadata about a user'
      type: object
      properties:
        type:
          $ref: '#/components/schemas/UserDataType'
        value:
          title: Value of the metadata
          type: string
    UserDataRequest:
      type: object
      properties:
        fid:
          type: string
          format: uint64
        userDataType:
          $ref: '#/components/schemas/UserDataType'
    UserDataType:
      title: '* Type of UserData'
      type: string
      description: |-
        - USER_DATA_TYPE_PFP: Profile Picture for the user
         - USER_DATA_TYPE_DISPLAY: Display Name for the user
         - USER_DATA_TYPE_BIO: Bio for the user
         - USER_DATA_TYPE_URL: URL of the user
         - USER_DATA_TYPE_USERNAME: Preferred Name for the user
      default: USER_DATA_TYPE_NONE
      enum:
      - USER_DATA_TYPE_NONE
      - USER_DATA_TYPE_PFP
      - USER_DATA_TYPE_DISPLAY
      - USER_DATA_TYPE_BIO
      - USER_DATA_TYPE_URL
      - USER_DATA_TYPE_USERNAME
    UserNameProof:
      type: object
      properties:
        timestamp:
          type: string
          format: uint64
        name:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        owner:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        signature:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        fid:
          type: string
          format: uint64
        type:
          $ref: '#/components/schemas/UserNameType'
    UserNameType:
      type: string
      default: USERNAME_TYPE_NONE
      enum:
      - USERNAME_TYPE_NONE
      - USERNAME_TYPE_FNAME
      - USERNAME_TYPE_ENS_L1
    UsernameProofRequest:
      type: object
      properties:
        name:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
    UsernameProofsResponse:
      type: object
      properties:
        proofs:
          type: array
          items:
            $ref: '#/components/schemas/UserNameProof'
    VerificationAddEthAddressBody:
      title: '* Adds a Verification of ownership of an Ethereum Address'
      type: object
      properties:
        address:
          title: Ethereum address being verified
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        ethSignature:
          title: Signature produced by the user's Ethereum address
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        blockHash:
          title: Hash of the latest Ethereum block when the signature was produced
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
    VerificationRemoveBody:
      title: '* Removes a Verification of any type'
      type: object
      properties:
        address:
          title: Address of the Verification to remove
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
    VerificationRequest:
      type: object
      properties:
        fid:
          type: string
          format: uint64
        address:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
    protobufAny:
      type: object
      properties:
        '@type':
          type: string
      additionalProperties:
        type: object
